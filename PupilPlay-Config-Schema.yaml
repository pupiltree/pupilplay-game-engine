# PupilPlay Game Engine - Universal Configuration Schema
# Based on Automation Engine Configuration-Driven Architecture Pattern

# ===============================================
# GAME DOMAIN CONFIGURATION
# ===============================================
domain: "educational_games"  # educational_games | assessment_games | multiplayer_games
game_type: "math_runner"     # Template identifier
version: "1.0.0"
company_name: "PupilTree.ai"
environment: "production"    # development | staging | production

# ===============================================
# CORE GAME DEFINITION
# ===============================================
game_definition:
  name: "Multiplication Masters"
  description: "Help students master multiplication through engaging gameplay"
  target_age_range: [8, 12]
  subject: "mathematics"
  topic: "multiplication"
  difficulty_range: [1, 10]
  
  # Learning objectives aligned with curriculum standards
  learning_objectives:
    - "Master multiplication facts 1-12"
    - "Improve calculation speed and accuracy"
    - "Build confidence in mathematical problem solving"
    
  # Game completion criteria
  success_criteria:
    accuracy_threshold: 0.85
    speed_improvement: 0.20
    engagement_duration: 900  # seconds

# ===============================================
# TEMPLATE SYSTEM CONFIGURATION
# ===============================================
template_config:
  base_template: "math_runner"
  template_version: "2.1.0"
  
  # Template-specific customizations
  customizations:
    character_type: "ninja_cat"
    environment: "enchanted_forest"
    collectible_type: "magic_gems"
    obstacle_type: "math_traps"
    
  # Game mechanics overrides
  mechanics:
    movement_speed: 200
    jump_height: 400
    gravity: 600
    lives: 3
    time_limit: 300
    
  # Scoring system configuration
  scoring:
    correct_answer: 100
    speed_bonus: 50
    combo_multiplier: 1.5
    penalty_wrong: -25
    penalty_timeout: -10

# ===============================================
# AI ASSET GENERATION PIPELINE
# ===============================================
asset_generation:
  # AI model configurations
  models:
    base_generator:
      name: "image_gen_4"
      api_endpoint: "${IMAGE_GEN4_ENDPOINT}"
      api_key: "${IMAGE_GEN4_API_KEY}"
      
    editor:
      name: "nano_banana"
      model: "gemini_2_5_flash_image"
      api_endpoint: "${GEMINI_API_ENDPOINT}"
      api_key: "${GEMINI_API_KEY}"
      pricing:
        per_image: 0.039
        token_count: 1290
  
  # Asset generation workflows
  workflows:
    character_sprites:
      base_prompt: "Create a friendly {character_type} character suitable for children aged {age_range}"
      variations: ["idle", "running", "jumping", "celebrating", "hit"]
      animation_frames: 8
      dimensions: [64, 64]
      format: "sprite_sheet"
      
    environment_assets:
      base_prompt: "Design a {environment} background with educational mathematical elements"
      layers: ["background", "midground", "foreground", "ui_overlay"]
      dimensions: [1920, 1080]
      parallax_layers: true
      
    ui_elements:
      base_prompt: "Create child-friendly UI elements with {theme} aesthetic"
      components: ["buttons", "score_display", "progress_bar", "modals"]
      style: "cartoon_flat"
      accessibility: "wcag_2.1_aa"
  
  # Processing pipeline
  processing:
    optimization:
      compression: "aggressive"
      formats: ["webp", "png"]  # webp preferred, png fallback
      
    variants:
      mobile: 
        scale: 0.75
        quality: 85
      desktop:
        scale: 1.0
        quality: 95
        
    caching:
      cdn_distribution: true
      cache_duration: "30d"
      preload_critical: true

# ===============================================
# GAME CONTENT CONFIGURATION  
# ===============================================
content_generation:
  # Content engine integration
  content_source:
    engine: "pupil_content_engine"
    endpoint: "${CONTENT_ENGINE_ENDPOINT}"
    authentication: "${CONTENT_ENGINE_TOKEN}"
    
  # Curriculum alignment
  curriculum_standards:
    - name: "NCERT"
      grade: 4
      chapter: "Multiplication and Division"
    - name: "Common Core"
      standard: "4.NBT.B.5"
      
  # Dynamic content generation
  problem_generation:
    algorithm: "adaptive_difficulty"
    pool_size: 100
    refresh_interval: "1h"
    
    # Problem categories and distribution
    categories:
      - type: "single_digit"
        weight: 0.4
        range: [1, 9]
      - type: "double_digit"
        weight: 0.4  
        range: [10, 99]
      - type: "word_problems"
        weight: 0.2
        complexity: "age_appropriate"
        
  # Hint system configuration
  hint_system:
    socratic_method: true
    progressive_disclosure: true
    max_hints: 3
    
    hint_types:
      - type: "visual"
        description: "Show visual representation"
      - type: "decomposition"
        description: "Break problem into smaller parts"
      - type: "strategy"
        description: "Suggest solving strategy"

# ===============================================
# LANGGRAPH TWO-NODE ORCHESTRATION
# ===============================================
langgraph_orchestration:
  # Static two-node workflow (NEVER changes - all logic in configuration)
  workflow:
    name: "pupilplay_universal_game_engine"
    version: "1.0"
    architecture: "two_node_static"
    
    # Node 1: Game Master (Educational AI Assistant) - replaces Assistant Node
    game_master_node:
      description: "Universal educational AI tutor embedded in game interactions"
      
      # Model selection strategy (same as automation engine)
      model_selection:
        primary: "gemini_pro"      # Complex educational interactions, detailed explanations
        fallback: "gemini_flash"   # Quick feedback, simple hints, routine interactions
        selection_criteria: "educational_complexity_scoring"
        circuit_breaker:
          failure_threshold: 3
          recovery_timeout: 60
          
      # All educational expertise lives in system prompt (configuration-driven)
      system_prompt_template: |
        You are an expert {subject} educator embedded in the "{game_name}" educational game.
        
        Your role is to provide personalized educational support to {player_name}, age {player_age}.
        
        EDUCATIONAL CONTEXT:
        - Subject: {subject}
        - Current Topic: {current_topic}  
        - Player Level: {current_level}
        - Learning Objectives: {learning_objectives}
        - Identified Gaps: {learning_gaps}
        - Learning Style: {preferred_learning_style}
        
        CURRENT GAME STATE:
        - Game Type: {game_type}
        - Difficulty Level: {difficulty_level}
        - Recent Performance: {recent_accuracy}% accuracy, {problems_per_minute} problems/minute
        - Engagement Score: {engagement_score}
        - Session Time: {session_duration} minutes
        
        AVAILABLE GAME ACTIONS:
        {available_game_actions}
        
        EDUCATIONAL PHILOSOPHY:
        - Use Socratic questioning to guide discovery, never just give answers
        - Provide immediate, specific feedback on learning progress
        - Maintain optimal challenge level for flow state
        - Celebrate effort and progress, not just correct answers
        - Connect abstract concepts to concrete, visual representations
        - Adapt teaching style to individual learner needs
        
        COMMUNICATION GUIDELINES:
        - Age-appropriate vocabulary for {target_age_range} year olds
        - Encouraging and supportive tone
        - Focus on mathematical/scientific/logical thinking processes
        - Use game metaphors and terminology naturally
        - Provide hints that guide thinking, not direct answers
        
        Remember: Every interaction should build both subject mastery AND confidence!
        
    # Node 2: Game Actions (Real-World Integration Hub) - replaces Tools Node
    game_actions_node:
      description: "Execute educational decisions in the real game world"
      execution_pattern: "langgraph_tools_pattern"  # Same as automation engine
      
      # Educational Tools (equivalent to MCP tools in automation engine)
      educational_tools:
        - name: "adjust_difficulty"
          description: "Real-time challenge level calibration based on performance"
          parameters: ["new_difficulty_level", "adjustment_rationale", "transition_smoothness"]
          
        - name: "generate_hint" 
          description: "Context-aware educational hint generation"
          parameters: ["hint_type", "visual_support", "complexity_level", "learning_style_adaptation"]
          
        - name: "create_educational_content"
          description: "Dynamic problem/scenario generation aligned with curriculum"
          parameters: ["content_type", "difficulty_level", "learning_objectives", "student_interests"]
          
        - name: "assess_understanding"
          description: "Invisible knowledge probing through gameplay interactions"
          parameters: ["assessment_type", "skills_to_probe", "integration_method"]
          
        - name: "provide_explanation"
          description: "Detailed concept clarification with multiple representation modes"
          parameters: ["explanation_depth", "visual_aids", "real_world_connections"]
          
        - name: "track_learning_progress"
          description: "Record educational outcomes and skill development"
          parameters: ["skill_category", "mastery_level", "evidence_type", "standards_alignment"]
      
      # Game Mechanics Tools
      game_mechanics_tools:
        - name: "update_game_state"
          description: "Modify player progress, achievements, and game elements"
          parameters: ["state_category", "new_values", "animation_triggers"]
          
        - name: "trigger_celebration"
          description: "Activate success animations and positive reinforcement"
          parameters: ["celebration_type", "achievement_context", "personalization_elements"]
          
        - name: "manage_inventory"
          description: "Handle educational rewards and power-ups"
          parameters: ["item_type", "quantity_change", "unlock_conditions"]
          
        - name: "save_progress"
          description: "Persistent storage of learning and game achievements"
          parameters: ["checkpoint_type", "data_categories", "sync_external_systems"]
      
      # AI Asset Generation Tools
      asset_generation_tools:
        - name: "generate_visual_asset"
          description: "Create educational graphics using Nano Banana + Image Gen 4 pipeline"
          parameters: ["asset_type", "educational_context", "visual_specifications", "target_age_group"]
          
        - name: "create_character_variation"
          description: "Generate personalized character appearances"
          parameters: ["character_base", "customization_options", "achievement_reflections"]
          
        - name: "design_environment_element"
          description: "Generate contextual educational environment assets"
          parameters: ["environment_theme", "educational_integration", "interactive_elements"]
      
      # Analytics and Integration Tools
      analytics_tools:
        - name: "record_learning_interaction"
          description: "Capture educational interaction data for analysis"
          parameters: ["interaction_type", "learning_context", "outcome_metrics"]
          
        - name: "sync_external_systems"
          description: "Coordinate with PupilAssess, Content Engine, LMS"
          parameters: ["system_type", "data_payload", "sync_direction"]
          
        - name: "generate_insights"
          description: "Analyze learning patterns and generate actionable insights"
          parameters: ["analysis_timeframe", "focus_areas", "stakeholder_type"]
    
    # Static workflow routing (identical to automation engine pattern)
    routing_logic:
      entry_point: "game_master"
      conditional_routing: "langgraph_tools_condition"  # Built-in LangGraph condition
      return_path: "always_return_to_game_master"
      error_handling: "graceful_degradation_with_educational_continuity"
  
  # Adaptive difficulty algorithms
  difficulty_adaptation:
    algorithm: "elo_based"
    starting_elo: 1200
    k_factor: 32
    
    performance_factors:
      - metric: "accuracy"
        weight: 0.4
        target: 0.75
      - metric: "response_time"
        weight: 0.3
        target: 15  # seconds
      - metric: "hint_usage"
        weight: 0.2
        target: 1
      - metric: "engagement"
        weight: 0.1
        target: 0.8
        
  # Emotion detection (opt-in)
  emotion_detection:
    enabled: false  # Requires explicit parental consent
    models: ["facial_expression", "voice_tone", "interaction_patterns"]
    privacy:
      local_processing: true
      no_data_storage: true
      anonymized_analytics_only: true

# ===============================================
# PHASER.JS RENDERING CONFIGURATION
# ===============================================
phaser_config:
  # Core Phaser settings
  renderer:
    type: "AUTO"  # AUTO, CANVAS, WEBGL
    width: 1024
    height: 768
    pixel_art: false
    antialias: true
    
  # Scene configuration
  scenes:
    preloader:
      key: "PreloaderScene"
      active: true
      assets:
        - sprites: "assets/sprites/"
        - audio: "assets/audio/"
        - fonts: "assets/fonts/"
        
    main_menu:
      key: "MainMenuScene"
      background: "menu_bg"
      music: "menu_theme"
      
    gameplay:
      key: "GameplayScene"
      physics: "arcade"
      background: "game_bg"
      music: "gameplay_theme"
      
    pause:
      key: "PauseScene"
      modal: true
      
    game_over:
      key: "GameOverScene"
      statistics: true
  
  # Physics engine configuration
  physics:
    default: "arcade"
    arcade:
      gravity: { y: 300 }
      debug: false
      
  # Audio configuration
  audio:
    disable_web_audio: false
    no_audio: false
    
  # Performance settings
  performance:
    fps_target: 60
    object_pool_size: 100
    max_particles: 500
    texture_atlas: true

# ===============================================
# MULTIPLAYER CONFIGURATION
# ===============================================
multiplayer:
  enabled: true
  max_players: 4
  
  # Game modes
  game_modes:
    - name: "cooperative"
      description: "Work together to solve problems"
      victory_condition: "team_score_threshold"
      team_based: true
      
    - name: "competitive"
      description: "Race to answer questions first"
      victory_condition: "individual_high_score"
      team_based: false
      
    - name: "relay"
      description: "Take turns solving problems"
      victory_condition: "completion_time"
      team_based: true
      turn_based: true
  
  # Networking configuration
  networking:
    protocol: "webrtc_with_websocket_fallback"
    signaling_server: "${SIGNALING_SERVER_URL}"
    turn_servers: ["${TURN_SERVER_1}", "${TURN_SERVER_2}"]
    
    game_state:
      tick_rate: 30
      lag_compensation: true
      rollback_frames: 3
      
    matchmaking:
      skill_based: true
      region_preference: true
      max_wait_time: 30  # seconds
      
  # Anti-cheat measures
  anti_cheat:
    authoritative_server: true
    client_validation: false
    suspicious_behavior_detection: true
    automated_response: "flag_for_review"

# ===============================================
# SAFETY & MODERATION CONFIGURATION
# ===============================================
safety_config:
  # Compliance standards
  compliance:
    - standard: "COPPA"
      requirements:
        - parental_consent
        - limited_data_collection
        - safe_communication
        
    - standard: "GDPR" 
      requirements:
        - right_to_erasure
        - data_portability
        - consent_management
        
    - standard: "WCAG_2_1_AA"
      requirements:
        - keyboard_navigation
        - screen_reader_support
        - color_contrast_ratio
        
  # Content moderation
  moderation:
    # AI-powered filtering
    ai_moderation:
      toxicity_detection:
        enabled: true
        threshold: 0.7
        model: "perspective_api"
        
      inappropriate_content:
        enabled: true
        threshold: 0.8
        categories: ["violence", "adult_content", "hate_speech"]
        
    # Human moderation
    human_review:
      escalation_triggers:
        - ai_uncertainty_high
        - user_report_received
        - repeat_offender
        
      response_sla:
        priority_high: "2_hours"
        priority_medium: "24_hours"
        priority_low: "72_hours"
        
  # Communication safety
  communication:
    chat_enabled: false  # Disabled for child safety by default
    predefined_messages: true
    emoji_only: true
    profanity_filter: true
    
  # Privacy protection
  privacy:
    data_minimization: true
    local_processing_preferred: true
    anonymized_analytics: true
    no_personal_data_sharing: true

# ===============================================
# ANALYTICS & TELEMETRY CONFIGURATION
# ===============================================
analytics:
  # Telemetry collection
  telemetry:
    enabled: true
    sampling_rate: 1.0  # 100% in development, reduce in production
    
    # Performance metrics
    performance:
      - fps_monitoring
      - load_times
      - memory_usage
      - network_latency
      
    # Learning analytics
    learning:
      - problem_attempt_accuracy
      - time_per_problem
      - hint_usage_patterns
      - difficulty_progression
      - engagement_duration
      
    # Behavioral analytics (anonymized)
    behavioral:
      - navigation_patterns
      - feature_usage
      - session_duration
      - retention_metrics
  
  # Data storage configuration
  storage:
    clickhouse:
      endpoint: "${CLICKHOUSE_ENDPOINT}"
      database: "pupilplay_analytics"
      retention_days: 365
      
    bigquery:
      project_id: "${GCP_PROJECT_ID}"
      dataset: "pupilplay_insights"
      
  # Real-time dashboards
  dashboards:
    teacher_dashboard:
      metrics: ["student_progress", "class_performance", "engagement_trends"]
      update_frequency: "real_time"
      
    admin_dashboard:
      metrics: ["system_performance", "usage_statistics", "error_rates"]
      update_frequency: "5_minutes"

# ===============================================
# DEPLOYMENT & INFRASTRUCTURE
# ===============================================
deployment:
  # Infrastructure configuration
  infrastructure:
    platform: "kubernetes"
    cloud_provider: "gcp"  # gcp | aws | azure
    regions: ["us-central1", "europe-west1", "asia-southeast1"]
    
  # Container configuration
  containers:
    game_engine:
      image: "pupilplay/game-engine"
      resources:
        cpu: "500m"
        memory: "1Gi"
      replicas: 3
      
    multiplayer_server:
      image: "pupilplay/multiplayer-server"  
      resources:
        cpu: "1000m"
        memory: "2Gi"
      replicas: 2
      
  # CDN configuration
  cdn:
    provider: "cloudflare"
    caching:
      static_assets: "30d"
      api_responses: "5m"
      game_configs: "1h"
      
  # SSL/TLS configuration
  security:
    ssl_enforcement: true
    hsts_enabled: true
    certificate_authority: "letsencrypt"
    
  # Monitoring and alerting
  monitoring:
    prometheus:
      scrape_interval: "30s"
      retention: "15d"
      
    grafana:
      dashboards: ["game_performance", "infrastructure", "business_metrics"]
      
    alerting:
      channels: ["slack", "email", "pagerduty"]
      conditions:
        high_error_rate: "> 5%"
        high_latency: "> 2s"
        low_availability: "< 99%"

# ===============================================
# ENVIRONMENT VARIABLES
# ===============================================
# Note: Actual values should be set via environment variables or secrets management
# This section documents required environment variables

environment_variables:
  # Database connections
  DATABASE_URL: "${DATABASE_URL}"
  REDIS_URL: "${REDIS_URL}"
  MONGODB_URL: "${MONGODB_URL}"
  
  # AI service APIs
  GEMINI_API_KEY: "${GEMINI_API_KEY}"
  GEMINI_API_ENDPOINT: "${GEMINI_API_ENDPOINT}"
  IMAGE_GEN4_API_KEY: "${IMAGE_GEN4_API_KEY}"
  IMAGE_GEN4_ENDPOINT: "${IMAGE_GEN4_ENDPOINT}"
  
  # External services
  CONTENT_ENGINE_ENDPOINT: "${CONTENT_ENGINE_ENDPOINT}"
  CONTENT_ENGINE_TOKEN: "${CONTENT_ENGINE_TOKEN}"
  SIGNALING_SERVER_URL: "${SIGNALING_SERVER_URL}"
  
  # Analytics and monitoring
  CLICKHOUSE_ENDPOINT: "${CLICKHOUSE_ENDPOINT}"
  GCP_PROJECT_ID: "${GCP_PROJECT_ID}"
  
  # Security and compliance
  ENCRYPTION_KEY: "${ENCRYPTION_KEY}"
  JWT_SECRET: "${JWT_SECRET}"
  
  # Third-party integrations
  TURN_SERVER_1: "${TURN_SERVER_1}"
  TURN_SERVER_2: "${TURN_SERVER_2}"

# ===============================================
# FEATURE FLAGS
# ===============================================
feature_flags:
  # AI and ML features
  ai_difficulty_adaptation: true
  emotion_detection: false  # Requires parental consent
  ai_generated_content: true
  
  # Multiplayer features  
  multiplayer_enabled: true
  tournaments: false  # Phase 3 feature
  leaderboards: true
  
  # Advanced features
  offline_mode: false  # Phase 3 feature
  vr_support: false   # Future consideration
  ar_support: false   # Future consideration
  
  # Developer features
  debug_mode: false
  performance_profiling: false
  a_b_testing: true

# ===============================================
# VALIDATION SCHEMA
# ===============================================
# This section defines validation rules for the configuration
# (Implementation would use JSON Schema or similar)

validation:
  required_fields:
    - domain
    - game_type
    - template_config.base_template
    - phaser_config.renderer
    
  constraints:
    difficulty_range:
      min: 1
      max: 10
    max_players:
      min: 1
      max: 8
    target_age_range:
      min: 5
      max: 18
      
  dependencies:
    multiplayer_enabled: ["networking.protocol"]
    emotion_detection: ["privacy.parental_consent"]
    ai_generated_content: ["models.base_generator", "models.editor"]